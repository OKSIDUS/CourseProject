@using Microsoft.AspNetCore.Identity
@inject Microsoft.AspNetCore.Identity.UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "User list";
}

<h1>@ViewData["Title"]</h1>

<table class="table">
    <thead>
        <tr>
            <th>User name</th>
            <th>Email</th>
            <th>Role</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in ViewBag.Users)
        {
            <tr>
                @{
                    var isAdmin = await UserManager.IsInRoleAsync(user, "admin");
                    if (user.LockoutEnd != null && user.LockoutEnd >= DateTime.Now)
                    {
                        <td style="color: red">@user.UserName</td>
                        <td style="color: red">@user.Email</td>
                        <td style="color: red">@(isAdmin ? "admin" : "user")</td>
                    }
                    else
                    {
                        <td>@user.UserName</td>
                        <td>@user.Email</td>
                        <td>@(isAdmin ? "admin" : "user")</td>
                    }

                }
                
                <td>

                    @Html.ActionLink("Details", "UserDetails", new { email = user.Email }) |
                    @Html.ActionLink("Delete", "DeleteUser", new {  id = user.Id })
                    @Html.ActionLink("Block", "BlockUser", new { id = user.Id })
                    @Html.ActionLink("Unblock", "UnlockUser", new {id = user.Id})
                </td>
                <td>@(isAdmin ? Html.ActionLink("Admin delete", "UnsetAdmin", new { id = user.Id }) : Html.ActionLink("Set Admin", "SetAdmin", new { id = user.Id }))</td>
            </tr>
        }
    </tbody>
</table>